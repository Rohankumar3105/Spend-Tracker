// plugins {
//     id "com.android.application"
//     // START: FlutterFire Configuration
//     id 'com.google.gms.google-services'
//     // END: FlutterFire Configuration
//     id "kotlin-android"
//     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//     id "dev.flutter.flutter-gradle-plugin"
// }

// def localProperties = new Properties()
// def localPropertiesFile = rootProject.file("local.properties")
// if (localPropertiesFile.exists()) {
//     localPropertiesFile.withReader("UTF-8") { reader ->
//         localProperties.load(reader)
//     }
// }

// def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
// if (flutterVersionCode == null) {
//     flutterVersionCode = "1"
// }

// def flutterVersionName = localProperties.getProperty("flutter.versionName")
// if (flutterVersionName == null) {
//     flutterVersionName = "1.0"
// }

// android {
//     namespace = "tracker.app"
//     compileSdk = flutter.compileSdkVersion
//     ndkVersion = flutter.ndkVersion

//     compileOptions {
//         sourceCompatibility = JavaVersion.VERSION_1_8
//         targetCompatibility = JavaVersion.VERSION_1_8
//     }

//     defaultConfig {
//         minSdkVersion 23
//         targetSdkVersion 33
//         versionCode 1
//         versionName "1.0"
//         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//         applicationId = "tracker.app"
//         // applicationId = "1:964738126496:android:4578812d7f3c503dde2fc5"
//         // You can update the following values to match your application needs.
//         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//         minSdk = flutter.minSdkVersion
//         targetSdk = flutter.targetSdkVersion
//         versionCode = flutterVersionCode.toInteger()
//         versionName = flutterVersionName
//     }

//     buildTypes {
//         release {
//             // TODO: Add your own signing config for the release build.
//             // Signing with the debug keys for now, so `flutter run --release` works.
//             signingConfig = signingConfigs.debug
//         }
//     }
// }

// flutter {
//     source = "../.."
// }

// // dependencies {
// //   // Import the Firebase BoM
// //   implementation platform('com.google.firebase:firebase-bom:33.1.2')


// //   // TODO: Add the dependencies for Firebase products you want to use
// //   // When using the BoM, don't specify versions in Firebase dependencies
// //   implementation 'com.google.firebase:firebase-analytics'


// //   // Add the dependencies for any other desired Firebase products
// //   // https://firebase.google.com/docs/android/setup#available-libraries
// // }


plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "tracker.app"
    compileSdk = flutter.compileSdkVersion  // Ensure this is a valid compile SDK version
    ndkVersion = flutter.ndkVersion  // Ensure this is a valid NDK version or remove if not needed

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "tracker.app"
        minSdkVersion 23  // Explicitly set minSdkVersion to 23
        targetSdkVersion 33  // Ensure this is a valid target SDK version
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

// Uncomment and update dependencies as needed
// dependencies {
//     // Import the Firebase BoM
//     implementation platform('com.google.firebase:firebase-bom:33.1.2')

//     // Add the dependencies for Firebase products you want to use
//     // When using the BoM, don't specify versions in Firebase dependencies
//     implementation 'com.google.firebase:firebase-analytics'

//     // Add the dependencies for any other desired Firebase products
//     // https://firebase.google.com/docs/android/setup#available-libraries
// }
